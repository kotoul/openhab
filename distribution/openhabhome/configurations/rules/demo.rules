import org.openhab.core.library.types.*
import org.openhab.core.persistence.*
import org.openhab.model.script.actions.*

//var Number counter = 1

rule Startup
when 
	System started
then
	if (!(Set.state instanceof DecimalType)) {
		postUpdate(Set, 0)
	}
end

rule Temperature
when
	Item Set changed or 
	Item Temperature changed
then
	var Number temperature
	
	if (Temperature.state instanceof DecimalType) {
		temperature = Temperature.state as DecimalType
	} 
	else {
		temperature = 0
	}
	
	var Number setpoint = Set.state as DecimalType
	var Number set = 0
	
	if (setpoint - temperature > 1) {
		set = 2
	} else if (setpoint - temperature < -1) {
		set = 0
	} else {
		set = 1
	}
	
	if (Control.state != set) {
		sendCommand(Control, set)
	}
end

/*
rule DowJones
when
	Item DowJones received update
then
	setFloatJones( doConvert(DowJones.state.toString()) )
		
	sendCommand(Pom, valueIncreased)
	sendCommand(DowJonesString, calcChange)
end
*/
/* 
rule "Crontest"
when 
	Time cron "0/15 * * * * ?"
then
	doZkouska("pocitam... " + counter)
	
	sendCommand(TestS, "s"+counter)
	sendCommand(num, counter)
	
	counter = counter + 1
end	
 
rule TestString
when
	Item TestS received update
then
	doZkouska("TestS updatovan: " + TestS.state)
end
*/